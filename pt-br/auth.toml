[auth]
	# This is for the links a the bottom of login/join auth pages.
	or = "ou"
	join_link = "Cadastre-se!"
	login_link = "Entre"
	forgot_link = "Esqueci o nome de usuário ou senha"

# /login
[auth.login]
	page_title = "Log in to Game Jolt"

	twitter_button = "Entre usando Twitter"
	facebook_button = "Entre usando Facebook"

	username_label = "Nome de Usuário"
	password_label = "Senha"
	submit_button = "Entre"

	# Shows up if you enter an invalid user/password combination.
	invalid_login_error_html = "Nome de usuário ou senha incorretos."

	# Login takes a while, so we show this for the loading text.
	# Can be quirky and fun! =]
	loading_message_count = "4"
	loading_message_1 = "Conectando-se a estrutura principal..."
	loading_message_2 = "Calculando o valor exato de π..."
	loading_message_3 = "Instalando módulos de entretenimento..."
	loading_message_4 = "Projetando o hoopla matrix..."

# /join
[auth.join]
	page_title = "Junte-se à Game Jolt - A Maior Coleção de Jogos Indies do Mundo"

	twitter_button = "Junte-se com o Twitter"
	facebook_button = "Junte-se com o Facebook"

	# The lead text of the page.
	# Quirky and fun as it's the text to get them excited about signing up.
	# Let's try to keep it at 3 lines or less on the page.
	join_message_html_count = "2"
	join_message_html_1 = "Junte-se a nós. Huehuehue.<br>Nós temos jogos.<br><strong><em>Huehuehuebrbrbr!</em></strong>"
	join_message_html_2 = "Junte-se a nós para uma jornada em um mundo de jogos."

	email_label = "Endereço de Email"
	username_label = "Nome de Usuário"
	password_label = "Senha"

	submit_button = "Cadastre-se"

# /join/almost
# After a successful sign up they land here.
# They still have to authorize their account.
[auth.join.almost]
	page_title = "Quase lá!"
	heading = "@:auth.join.almost.page_title"
	body_html = """
	<p>Antes de entrar na Game Jolt, você tem que verificar o seu endereço de email.</p>
	<p>Nós te mandamos um email com instruções de como autorizar a sua conta.</p>
	"""
	spam = "Se você não viu nenhum email em 10 minutos, verifique a sua caixa de spam. Talvez esteja lá."
	urgency = "Você tem uma semana para verificar a sua conta. Se você não verificar, sua conta será deletada, e você terá de se cadastrar outra vez."

# You need to actually sign up to get a valid URL for this page.
# We only show a Growl on successful authorization and funnel off to the main site.
[auth.authorize]
	success_growl_title = "Conta Autorizada"
	success_growl = "Estamos te redirecionando para o seu dashboard na Game Jolt."

# /authorize/169219/62b17036174c87ee503fe0ef2902c79d/2
# The page that shows when their authorization fails.
# They shouldn't get here unless they clicked the link again after authorizing. Or if they are trying to cheat something.
[auth.authorize.invalid]
	page_title = "Código de Autorização Inválido"
	heading = "Autorização Inválida"
	body_html = """
	<p>Seu código de autorização é inválido.</p>
	<p>Favor copiar e colar o URL completo que nós enviamos para você.</p>
	"""

# /forgot
[auth.forgot]
	page_title = "Recupere as suas Credenciais de Login"
	heading = "@:auth.forgot.page_title"

	email_help = "Entre o seu endereço de email e vamos enviar para você as suas credenciais de login."
	email_label = "Endereço de email"
	submit_button = "Recupere Credenciais"

	# If the email address they enter isn't a registered user, this shows up as an error message.
	invalid_email_error_html = """
	<p>Hmmm, parece que este endereço de email ainda não está no nosso sistema. Talvez você ainda não <a href="/join">se cadastrou</a>?</p>
	"""

# /forgot/sent
# For after they fill out the "forgot" form.
[auth.forgot.sent]
	page_title = "Credentials Sent"
	heading = "@:auth.forgot.sent.page_title"
	body_html = "<p>We've sent your login credentials to the email address you entered.</p>"
	spam = "If you don't see our email within 10 minutes, please check your spam folder. It might have been gobbled up!"

# The URL for this gets sent in an email when they fill out the forgot login credentials page.
[auth.reset_password]
	page_title = "Reset Password"
	heading = "@:auth.reset_password.page_title"

	password_help = "If you'd like to reset your password, enter a new one below."
	password_label = "New Password"
	submit_button = "Reset Password"

	# For when they successfully reset.
	# Will send them back to the login page after showing this Growl.
	success_growl_title = "Password Changed"
	success_growl = "Your password has been reset. Now you can log in with your new one."


#####################
# Linked Account Auth

[auth.linked_account]

	# When they get returned back to GJ from FB/Twitter, etc. we do some processing of the login/sign up.
	# This is a generic loading message while we're doing our work.
	loading_message = "Processing. Please wait..."

[auth.linked_account.facebook]

	# Generic failed message.
	failed_growl = "Unable to log in with Facebook."
	failed_growl_title = "Login Failed"

	# For the rare case when FB doesn't give us an email address. This would be very rare if it did ever happen.
	no_email_growl = "Your Facebook account did not return an email address. Make sure you have verified it with Facebook."
	no_email_growl_title = "Oh no!"

	# When someone tries to sign up with an FB account with an email address that exists on an existing GJ account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with FB later on, but their email address is
	# registered on their old account.
	duplicate_email_growl = "The email address on this Facebook account is already in use. Perhaps you already have an account?"
	duplicate_email_growl_title = "Oh no!"

	# After a successful FB sign up.
	created_growl = "Your account has been created. It's smooth sailing from here on out!"
	created_growl_title = "Account Created"

[auth.linked_account.twitter]

	# Generic failed message.
	failed_growl = "Unable to log in with Twitter."
	failed_growl_title = "Login Failed"

	# When they submit the form and their account is set up with Twitter.
	created_growl = "Your account has been created. It's smooth sailing from here on out!"
	created_growl_title = "Account Created"

# /login/finalize-twitter
# They get directed here when they sign up with a new twitter account and we require their email address.
[auth.linked_account.twitter.finalize]
	page_title = "Email Required"
	heading = "@:auth.linked_account.twitter.finalize.page_title"

	email_help = "To finish logging in with Twitter, please enter a valid email address."
	email_label = "Email Address"
	submit_button = "Complete Sign Up"

	# If they entered an email address that exists on another account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with twitter later on, but their email address is
	# registered on their old account.
	duplicate_email_error_html = """
	<p>The email address you entered is already in use.</p>
	<p>If you already have a Game Jolt account you can <a href="/login">log in here</a>.</p>
	<p>If you've forgotten your login information, you can <a href="/forgot">retrieve it here</a>.</p>
	"""
